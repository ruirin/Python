'''
변수(variable)
    데이터를 담아두는 그릇.
    컴퓨터는 기본적으로 명령어를 처리하고 나면 결과를 따로 저장하고 있지 않으므로
    결과를 다시 사용하고 싶다면 변수라는 그릇에 따로 담아두여야 한다.

    1.자료형을 지정하지 않는다.
    
    C언어나 Java와 다르게 변수 선언 시 자료형을 따로 지정하지 않아도 오류를 발생시키지 않는다.
    하지만 엄연히 자료형은 존재, 문법을 통해 강제하지 않을 뿐이다.

    2. 대입 연산자(=)
    
    자신의 오른쪽에 있는 데이터를 왼쪽에 위치한 변수에 저장.
    만약 대입 연산자의 오른쪽에 특정 값이 아닌 수식 등의 연산이 필요한 문장이 등장하면,
    해당 연산을 모두 처리한 후 그 결과값을 왼쪽에 저장.
    
'''

'''
정수형
    소수점이 없는 숫자형 데이터.
    자연수와 음의 정수, 0.
    진법에 따라 다양하게 표현.(8진법,16진법)
    
'''
print(3+7)

a = 1+5
print(a)

'''
실수형
    소수점이 존재하는 숫자형 데이터.
    실수형과 정수형 사이의 연산은 실수형 결과물 반환.
'''
b = 1.5+4.2
print(b)
'''
16진수
    한 자리가 0부터 15까지의 수를 저장할 수 있으며,
    이 때 10 이상의 수는 영문자 a부터 f까지로 표현.
    16진법 표기임을 명시하기 위해서 숫자 앞에 반드시 '0x'를 불여야 한다.
'''
c = 0x16 + 0x08
print(c)

'''
산술 연산자
    더하기(+), 빼기(-), 곱하기(*), 나누기(/), 나머지(%)
    몫(//), 제곱 연산(**)
'''

'''
문자열
    텍스트(string) '문자열'
    문자열은 따옴표로 감싸져 있으며 큰 따옴표("")나 작은 따옴표('') 둘 다 사용.
    대신 따옴표의 순서가 중요.
    문자열 선언 방식은 개행 문자까지 모두 문자열로 인식. 여러 줄의 문자열을 표시할 때 유용하게 사용.

문자열 연산
    1. 더하기 (+)
    2. 곱하기 (*)
'''
a = "python"
b = "html"
c ="json"

print(a)
print(b + "is fun")
print(c * 3)
